use('commerce');
// db.produtos.find();

// --- req 2
// db.produtos.find({}, {_id: 0, nome: 1, vendidos: 1}).sort({vendidos: 1});

// --- req 3
//classficando mais vendido para o menos vendido, limitando ao mais vendido
// db.produtos.find({}, {_id: 0, nome: 1, vendidos: 1}).sort({vendidos: -1}).limit(1);

// --- req 4
// db.produtos.find({ vendidos: { $gt: 50, $lt: 100 } }, {_id: 0, nome: 1, vendidos: 1 }).sort({vendidos: 1});

// --- req 5
// db.produtos.find({ $or: [{ curtidas: 36 }, { vendidos: 85 }] }, {_id: 0, nome: 1, curtidas: 1, vendidos: 1 });

// --- req 6
// db.produtos.find({ curtidas: { $gt: 10, $lt: 100 } }, {_id: 0, nome: 1, curtidas: 1 });

// --- req 7
// db.produtos.find({ vendidos: { $ne: 50 }, tags: { $exists: false } }, {_id: 0, nome: 1, vendidos: 1 });

// --- req 9
// db.produtos.find({ valoresNutricionais: { 
//                     $elemMatch: {
//                       tipo: "calorias", 
//                       quantidade: { $lt: 500 } 
//                       }, 
//                     },
//                 }, 
//                 {_id: 0, nome: 1 }
//                 );


// --- req 10
// db.produtos.find({ 
//   valoresNutricionais: { 
//                     $elemMatch: {
//                       tipo: "proteínas", 
//                       percentual: { $gte: 30, $lte: 40 } 
//                       }, 
//                     },
//   }, 
//   {_id: 0, nome: 1 }
//   );


// --- req 11
// db.produtos
//   .find({ nome: { 
//     $nin: ['Big Mac', 'McChicken'] } }, 
//   { _id: 0, nome: 1, curtidas: 1, vendidos: 1 });


// --- req 12
// db.produtos.updateMany({ nome: { $ne: "McChicken" }},  
//   { $addToSet: { ingredientes: "ketchup" } });

// db.produtos.find({}, { _id: 0, nome: 1, ingredientes: 1 });
     

// --- req 13
// db.produtos.updateMany({},  
//   { $set: { criadoPor: "Ronald McDonald" } });

// db.produtos.find({}, { _id: 0, nome: 1, criadoPor: 1 }); 


// --- req 14
// db.produtos
//   .find({ ingredientes: "picles" }, 
// { _id: 0, nome: 1, ingredientes: 1, valoresNutricionais: { $slice: 3} });


// --- req 15
// db.produtos.updateMany({},  
//   { $set: { avaliacao: NumberInt(0) } });

// db.produtos.updateMany({ tags: "bovino" },  
//   { $inc: { avaliacao: 5 } });

// db.produtos.updateMany({ tags: "ave" },  
//   { $inc: { avaliacao: 3 } });

// db.produtos.find({}, { _id: 0, nome: 1, avaliacao: 1 }); 


// --- req 16
// db.produtos.updateOne(
//   { nome: "Big Mac" },  
//   { $currentDate: { ultimaModificacao: true } });

// db.produtos.find(
//   { ultimaModificacao: { $exists: true } }, 
//   { _id: 0, nome: 1 }); 


// --- req 17
// db.resumoProdutos.insertOne({ franquia: "McDonalds", totalProdutos: db.produtos.countDocuments({}) });

// db.resumoProdutos.find({}, { _id: 0, franquia: 1, totalProdutos: 1 }); 


// --- req 18
// db.produtos.updateMany({ nome: { $in: ["Big Mac", "Quarteirão com Queijo"] }},  
//   { $push: { ingredientes: "bacon" } });

// db.produtos.find({}, { _id: 0, nome: 1, ingredientes: 1 });


// --- req 19
// db.produtos.updateMany({}, { $pull: { ingredientes: "cebola" } });

// db.produtos.find({}, { _id: 0, nome: 1, ingredientes: 1 });


// --- req 20
// db.produtos.updateOne({ nome: "Quarteirão com Queijo"}, { $pop: { ingredientes: -1 } });

// db.produtos.find({}, { _id: 0, nome: 1, ingredientes: 1 });


// --- req 21
// db.produtos.updateOne({ nome: "Cheddar McMelt"}, { $pop: { ingredientes: 1 } });

// db.produtos.find({}, { _id: 0, nome: 1, ingredientes: 1 });


// --- req 22
// db.produtos.updateMany({}, { $set: { vendasPorDia: [0, 0, 0, 0, 0, 0, 0] } });

// db.produtos.updateOne({ nome: "Big Mac" }, { $inc: { "vendasPorDia.3": 60 } })

// db.produtos.updateMany({ tags: "bovino" },  
//   { $inc: { "vendasPorDia.6": 120 } });

// db.produtos.find({}, { _id: 0, nome: 1, vendasPorDia: 1 });


// --- req 23
// db.produtos.updateMany({}, {
//   $push: {
//     tags: { $each: ["combo", "tasty"], $sort: 1 },
//   }
// });

// db.produtos.find({}, { _id: 0, nome: 1, tags: 1 });


// --- req 24
// db.produtos.updateMany({}, {
//   $push: {
//     valoresNutricionais: { $each: [], $sort: { percentual: -1 } },
//   }
// });

// db.produtos.find({}, { _id: 0, nome: 1, valoresNutricionais: 1 });


// --- req 25
// db.produtos
//   .updateMany({ valoresNutricionais: {
//     $elemMatch: {
//       tipo: "sódio",
//       percentual: { $gte: 40 },
//     }
//   }
// }, { $push: { tags: "muito sódio" } });

// db.produtos.find({}, { _id: 0, nome: 1, tags: 1 });


// --- req 26
// db.produtos
//   .updateMany({ valoresNutricionais: {
//     $elemMatch: {
//       tipo: "sódio",
//       percentual: { $gt: 20, $lt: 40 },
//     }
//   }
// }, { $push: { tags: "contém sódio" } });

// db.produtos.find({}, { _id: 0, nome: 1, tags: 1 });


// --- req 27
// db.produtos.countDocuments({ nome: { $regex: /mc/i } });


// --- req 28
// db.produtos.countDocuments({ ingredientes: { $size: 4 } });


// --- req 29
// db.produtos.updateMany({}, { $rename: { descricao: "descricaoSite" }});

// db.produtos.find({}, { _id: 0, nome: 1, descricaoSite: 1 });

// --- req 30
// db.produtos.updateOne({ nome: "Big Mac" }, { $unset: { curtidas: 0 }});

// db.produtos.find({}, { _id: 0, nome: 1, curtidas: 1 })

// --- req 31
// db.produtos
//   .find({ $expr: { $gt: ["$curtidas", "$vendidos"]}}, 
//   {_id: 0, nome: 1}, );

// --- req 32
db.produtos.find({ vendidos: { $mod: [5, 0]}}, { _id: 0, nome: 1, vendidos: 1})